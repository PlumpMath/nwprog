# Network Programming

This coursework project consists of several parts:

*	A HTTP *client* supporting HTTP/1.1 GET and PUT methods with local files.
*   A HTTP *server* supporting HTTP/1.1 GET and PUT methods with local files.
*	Tests for the internal components.

## Building

Building utilizes the following dependencies (Debian package names given):

* `libpcl1-dev`

Using the supplied Makefile should be enough to build the bin/client binary:

	$ make

The code has been built on the following OS/Distributions:

	Ubuntu 12.04.3 LTS					amd64
	Debian GNU/Linux 7.0 (wheezy)		amd64

Building requires GCC 4.6 or newer, with support for -std=gnu99 and -D _POSIX_C_SOURCE=200112L

GCC 4.4 will not work due to [gcc bug #10676](http://gcc.gnu.org/bugzilla/show_bug.cgi?id=10676).

## Build options

The supplied Makefile supports some additional build configuration options for various debugging configurations.

### SSL

The client optionally supports *https://* URLs using OpenSSL.

    $ make -B SSL=1

The libssl-dev headers must be available:

* `libssl-dev`

The server does NOT provide *https* support.

### Valgrind

Due to the use of multiple stacks, running the server under valgrind will report spurious errors. This can be avoided
with the use of special valgrind-specific instrumentation to register the separate stack frames:

    $ make -B VALGRIND=1

The valgrind headers are included in the valgrind package:

* `valgrind`

## Client

	$ ./bin/client -h
	Usage: ./bin/client [options] <url>

			-h --help          Display this text
			-q --quiet         Less output
			-v --verbose       More output
			-d --debug         Debug output

			-G --get=file      GET to file
			-P --put=file      PUT from file

			-I --iam=username  Send Iam header

The client will by default send an additional `Iam:` header in the request, containing the login username of the system
user running the process.

### Examples

	$ ./bin/client -q http://www.ietf.org/rfc/rfc2616.txt
	$ ./bin/client -G rfc2616.txt http://www.ietf.org/rfc/rfc2616.txt
	$ ./bin/client -P rfc2616.txt http://nwprog1.netlab.hut.fi:1340/upload/rfc2616.txt

## Server

The server does not provide any defaults for `<listen>`, `--daemon` or `--static/upload`, and these must be
explicitly given. Running the `server` without any arguments will simply exit immediately.

    $ ./bin/server -h
    Usage: ./bin/server [options] <listen>

        -h --help          Display this text
        -q --quiet         Less output
        -v --verbose       More output
        -d --debug         Debug output

        -D --daemon             Daemonize

        -I --iam=username       Send Iam header
        -S --static=path        Serve static files
        -U --upload=path        Accept PUT files

The server will by default send an additional `Iam:` header in the response, containing the login username of the system
user running the process.

### Examples

    $ ./bin/server -v localhost:8080 -S public/
    $ ./bin/server -v localhost:8080 ip6-localhost:8080 -S public/
    $ ./bin/server -v [::]:8080 -S public/
    $ ./bin/server :1340 --static public/ --upload public/upload/ --daemon

## Testing

The code includes some simple tests for some of the functionality, mostly related to string parsing:

	$ make test
